# {{ ansible_managed }}

{% if item.limit_req is defined %}
limit_req_zone $binary_remote_addr zone={{ item.name }}:10m rate={{ item.limit_req_rate | default("10r/s") }};
{% endif %}
{% if item.limit_conn is defined %}
limit_conn_zone $binary_remote_addr zone={{ item.name }}_addr:10m
{% endif %}

# This is to enable websocket use
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      $http_connection;
}

server {
  listen {{ nginx_proxy_address }}:80;
  server_name {{ item.hostname }};
  return 301 https://$http_host$request_uri;
}

server {
  access_log /var/log/nginx/{{ item.name }}-access.log main_ext;
  error_log /var/log/nginx/{{ item.name }}-error.log;

  listen {{ nginx_proxy_address }}:443 ssl http2;
  server_name {{ item.hostname }};

  ssl_ciphers HIGH:!aNULL:!eNULL:!MD5:!AES128;
  ssl_protocols: TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;

{% if item.ssl_cert is defined %}
  ssl_certificate /etc/ssl/{{ item.name }}.crt
  ssl_certificate_key /etc/ssl/{{ item.name }}.key
{% endif %}

{% if item.client_max_body_size is defined %}
  client_max_body_size {{ item.client_max_body_size }};
{% endif %}

  location / {
{% if item.proxy_timeout is defined %}
    proxy_read_timeout {{ item.proxy_timeout }};
    proxy_connect_timeout {{ item.proxy_timeout }};
{% endif %}
{% if item.proxy_redirect is defined %}
   proxy_redirect {{ item.proxy_redirect }};
{% endif %}
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Ssl on;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_pass {{ item.upstream_server }};

{% if item.limit_conn is defined %}
    limit_conn {{ item.name }}_addr {{ item.limit_conn }};
{% endif %}
{% if item.limit_req is defined %}
    limit_req zone={{ item.name }} {{ item.limit_req }};
{% endif %}
  }
{% if item.rewrites is defined %}
{% for __rw in item.rewrites %}
  rewrite {{ __rw }};
{% endfor %}
{% endif %}
}