---
- name: Use lesspipe from DRAC StdEnv
  when: ansible_facts['os_family'] == "Debian"
  ansible.builtin.lineinfile:
    path: /etc/skel/.bashrc
    regexp: '^(\[ -x /usr/bin/lesspipe \].*)'
    line: '# Use lesspipe from DRAC StdEnv # \g<1>'
    backrefs: true

- name: Ensure CC_CLUSTER is defined in /etc/environment
  block:
    - name: Read /etc/environment
      check_mode: false
      ansible.builtin.slurp:
        src: /etc/environment
      register: __environment_etc

    - name: Check for CC_CLUSTER
      ansible.builtin.assert:
        that: __environment_etc['content'] | b64decode | regex_search('^CC_CLUSTER=', multiline=True)
        fail_msg: "CC_CLUSTER must be set in /etc/environment when `environment_cc_env=true`"

# See https://docs.alliancecan.ca/wiki/Accessing_CVMFS#CUDA_location
- name: Ensure CUDA location is /usr/lib64/nvidia
  when: environment_cc_env_nvidia_packages is defined
  block:
    - name: List files installed from NVIDIA packages
      ansible.builtin.command: "dpkg -L {{ item }}"
      loop: "{{ environment_cc_env_nvidia_packages }}"
      register: __environment_libnvidia
      changed_when: false

    - name: Search files in /usr/lib/x86_64-linux-gnu/.*.so.*
      ansible.builtin.set_fact:
        __libnvidia_files: "{{ __libnvidia_files | default([]) | union(item.stdout_lines | select('search', '^/usr/lib/x86_64-linux-gnu/.*\\.so.*') | list) }}"
      loop: "{{ __environment_libnvidia.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Ensure /usr/lib64/nvidia/ directory exists
      ansible.builtin.file:
        path: /usr/lib64/nvidia/
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Ensure /usr/lib64/nvidia/ subdirectories exist
      when: (item | regex_search('^/usr/lib/x86_64-linux-gnu/(.*)/', '\\1')) != None
      ansible.builtin.file:
        path: "/usr/lib64/nvidia/{{ item | regex_search('^/usr/lib/x86_64-linux-gnu/(.*)/', '\\1') | first }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop: "{{ __libnvidia_files }}"

    - name: Create symbolic links in /usr/lib64/nvidia/
      ansible.builtin.file:
        src: "{{ item }}"
        dest: "/usr/lib64/nvidia/{{ item | regex_search('^/usr/lib/x86_64-linux-gnu/(.*)', '\\1') | first }}"
        state: link
        owner: root
        group: root
      loop: "{{ __libnvidia_files }}"
